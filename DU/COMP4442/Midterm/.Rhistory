knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(HistData)
data("Guerry")
dat<-Guerry
dat.c<-filter(dat,Region=="C")
(g<-ggplot(data=dat.c,aes(x=Commerce,y=Wealth))+geom_point())
w<-dat.c$Wealth
c<-dat.c$Commerce
n<-nrow(dat.c)
(m<-(sum(c*w)/n-mean(c)*mean(w))/
(sum((c)^2)/n-mean(c)^2))
(b<-mean(w)-m*mean(c))
(g+geom_abline(slope=m, intercept=b))
setwd("~/OneDrive - University of Denver/COMP4442/ProblemSetsWorkingDirectory/Midterm")
knitr::opts_chunk$set(echo = TRUE)
library(leaps)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(ggeasy)
library(lawstat)
# Load any additional packages, if any, that you use as part of your answers here
tires <- read.csv("Q1data.csv", header=TRUE, sep=",") # Loads the CSV file into memory. You may need to adapt this line to work on your computer
# transform rubber formulation to factor
tires$form <- as.factor(tires$form)
# check the data structure
str(tires)
# use the Shapiro-Wilk test with dplyr to assess normality and display as tibble
sw_tires <- tires %>%
group_by(form)%>%
summarize(pval=shapiro.test(miles)$p)
sw_tires
# use ggqqplot to assess the assumption of normality for data by factor level
ggqqplot(tires, x="miles", facet.by = "form")
# conduct the Brown-Forsythe test
levene.test(tires$miles, tires$form)
# create ggplot geom_boxplot to assess variance between groups visually
ggplot(tires, aes(x=form, y=miles))+
geom_boxplot()+
ggtitle("Mean Miles Traveled by Rubber Formulation Method")+
ggeasy::easy_center_title()
# create the tires ANOVA
tires.aov <- aov(miles ~ form, data = tires)
# display a summary of the tires ANOVA
summary(tires.aov)
drugs <- read.csv("Q2data.csv", header=TRUE, sep=",") # Loads the CSV file into memory. You may need to adapt this line to work on your computer
drugs$lowesterol <- as.factor(drugs$lowesterol)
drugs$lipidown <- as.factor(drugs$lipidown)
str(drugs)
# create two-way ANOVA with interaction term
drugs.aov<-aov(post.ldl ~ lowesterol*lipidown,data=drugs)
# print ANOVA summary
summary(drugs.aov)
mall <- read.csv("Q3data.csv", header=TRUE, sep=",") # Loads the CSV file into memory. You may need to adapt this line to work on your computer
mall$retail <- as.factor(mall$retail)
str(mall)
# create the "mall.reg" regression model
mall.reg <- lm(loss ~ retail+area+traffic, data=mall)
# print model summary
summary(mall.reg)
# print regression diagnostic plots (mall.reg)
plot(mall.reg)
# remove observation 200
mall.remove <- mall[-c(200),]
# create the regression model (mall.reg.change)
mall.reg.change <- lm(loss ~ retail+area+traffic, data = mall.remove)
# print the model summary
summary(mall.reg.change)
# print diagnostic plots (mall.reg.change)
plot(mall.reg.change)
# alternative method pull coefficients from the model
# intercept <- mall.reg.change$coefficients[1]
# area_coeff <- mall.reg.change$coefficients[3]
# traffic_coeff <- mall.reg.change$coefficients[4]
# intercept
# area_coeff
# traffic_coeff
# predicted_value <- intercept+(1000)*area_coeff+(200)*traffic_coeff
# predicted_value
# create the observation
d_predict <- data.frame(retail = "0", area = 1000, traffic = 200)
# predict sim_tot_fat
predict(mall.reg.change, d_predict)
many.var <- read.csv("Q4data.csv", header=TRUE, sep=",") # Loads the CSV file into memory. You may need to adapt this line to work on your computer
str(many.var)
# check the structure
str(many.var)
# create the null model for forward selection (model)
fwd.null <- lm(y ~ 1, data=many.var)
# sanity check
summary(fwd.null)
# create the scope for forward selection (formula)
fwd.scope <- as.formula("y ~ x1+x2+x3+x4+x5+x6+x7+x8")
# sanity check
fwd.scope
# create the forward selection model
forward.model <- step(fwd.null,scope=fwd.scope,
direction="forward",trace=1)
# print model summary
summary(forward.model)
# create the full model for backward selection (model)
bwd.full <- lm(y ~ ., data=many.var)
# sanity check
summary(bwd.full)
# create the scope for backward selection (formula)
bwd.scope <- as.formula("y ~ 1")
# sanity check
bwd.scope
# creat the backward model
backward.model <- step(bwd.full, scope = bwd.scope,
direction = "backward", trace = 1)
# print model summary
summary(backward.model)
# create formula for the full model
fmla.full <- as.formula("y ~ x1+x2+x3+x4+x5+x6+x7+x8")
# sanity check
fmla.full
# create the vector of outcomes
y <- many.var$y
# sanity check
y
# create the model matrix
x <- model.matrix(fmla.full, data = many.var)
# sanity check
x
# get model parameters using regsubsets (exhaustive)
# remove intercept (redundant)
best <- regsubsets(x=x[,2:ncol(x)], y=y, method="exhaustive", nvmax=8, nbest=1)
# create the star table
star <- summary(best)
# get boolean vectors of best model for each size
subsetsBoolean<-summary(best)$which
# create visual of best BIC's for models
bic_plt <- qplot(1:length(summary(best)$bic), summary(best)$bic)
# print star table and plot
star
bic_plt
# min function searches BICs returns model number of lowest BIC
best.subset.bic<-which(summary(best)$bic==min(summary(best)$bic))[1] # Min function searches BICs and shows model number
# sanity check
best.subset.bic
# pull dimension (variable) names
varnames <- attr(subsetsBoolean, "dimnames")[[2]]
# get  the best variables
best.varnames <- varnames[subsetsBoolean[best.subset.bic,]]
# print variables
best.varnames
# create the model
best.subsets.model <- lm(y ~ x1+x2+x3+x4+x7, data=many.var)
# print model summary
summary(best.subsets.model)
Q5.var <- read.csv("Q5data.csv", header=TRUE, sep=",") # Loads the CSV file into memory. You may need to adapt this line to work on your computer
str(Q5.var)
model.1 = lm(y~x1, data=Q5.var)
model.2 = lm(y~x1+x2, data=Q5.var)
model.3 = lm(y~x1+x3, data=Q5.var)
model.4 = lm(y~x1+x2+x3, data=Q5.var)
model.5 = lm(y~x1+x2+x3+x1:x2+x1:x3+x2:x3+x1:x2:x3, data=Q5.var)
summary(model.1)
summary(model.2)
summary(model.3)
summary(model.4)
summary(model.5)
# create the model
model.new <- lm(y~x1+x2+x3+x1:x2+x1:x3+x2:x3, data=Q5.var)
# print model summary
summary(model.new)
# conduct nested model test
m2.vs.new <- anova(model.2, model.new)
# pritn results
m2.vs.new
# conduct the nested model test
new.vs.m5 <- anova(model.new, model.5)
# print the results
new.vs.m5
lead <- read.csv("Q6data.csv", header=TRUE, sep=",") # Loads the CSV file into memory. You may need to adapt this line to work on your computer
str(lead)
# change hard to categorical variable
lead$hard <- as.factor(lead$hard)
# check the data structure
str(lead)
# fit the model
danger.model <- glm(danger ~ age+loc+hard,
data = lead,family="binomial")
#print the model summary
summary(danger.model)
